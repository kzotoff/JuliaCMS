














***************************************************************************************************
*                                                                                                 *
*                                         В Н И М А Н И Е                                         *
*                                                                                                 *
*     лицам с неуравновешенной психикой, лицам до 18 лет, беременным женщинам, а также лицам      *
*      с заболеваниям нервной или сердечно-сосудистой системы читать делее не рекомендуется       *
*                                                                                                 *
***************************************************************************************************




























дописать в мануал про unified-table (+ row-inline-button, actionboard)
дописать в мануал - alias в виде GUID автоматически ставится у элементов меню

добавить в модуль БД - проверку таблицы каментов, создание при отсутствии

не все доделки вынесены сюда, смотрим теги:
TAG_TODO  : нормальная пометка
TAG_CRAZY : допиливать в первую очередь
!!! потестировать модуль auth
DB: контроль доступа


выяснить про хрень с 6 animate + 1 callback
быстрая доделка: сделать распознавание макроса [macro type="content" alias="alias" /]
-------------------------------------------------------------------------------------------
упомянуть в мануале о том, что скрипты и стили не добавляются сразу, а сливаются разом (в отличие от общей концепции "модуль изменяет шаблон")
дописать в мануал про удаление вызова аплоадера после разворачивания
добавить функционал: настройку в странице, при которой она будет не помещаться на место макроса, а заменять весь контент (удобно будет для 404)
из module/admin/admin.css вытащить стили отдельных админок в соответственные модули
при удалении неиспользованных шаблонов писать в лог
модуль редиректа - ключи для неполного совпадения редактировать нельзя, только значения
придумать, что делать с тестированием всякой хрени типа log_this и XSLTransform
текстовое описание ошибки в модуле backup
сделать возможность получения поискового XML через запрос (легко, но нужно прикрутить авторизацию)
перенести ряд функций из модуля sms в userapi
верхнее меню отчета тоже генерировать
при генерации датаблока сделать возможность указывать его ID вместо create_guid
дописать XML sample для generateEditorialXML и generateCommentsXML
в генераторе меню тоже сделать функцию наподобие getFullFieldDefinition
отказаться от использования реестра в модуле DB (а лучше, по возможности, во всех, это вещи "в себе")
многие штуки перенести из userapi в модуль db (как функции, так и actions)
DB: удалять комментарии при удалении объекта
(!!!) при редактировании страницы с темплейтом виден не темплейт, а его сгенерированный контент
перенести в движок общие операции - изменение значения, добавление/удаление строки, массовые операции. API контекста добавить колбэками
(!) сделать еще одну обертку - для результата PDOWrapper->query. Иначе нужно знать что применять - fetch или fetchAssoc, что негодно
дописать регэкспы контроля ввода в полях. сами регэкспы переделать на константы (для почты, текстов, номеров и прочее)
настроечную хрень модулей перенести из conf.php в описания модулей
дописать в мануал про функцию хидеров X-JuliaCMS-Result-*
дописать в мануал про то, почему админ-модуль на самом деле не совсем модуль	
блокировка фона во время ajax-запросов
навести порядок с именами констант
убрать в движок вызовы user.css и user.js
edit_templates.xsl - убрать стиль у textarea
придумать, как определять констранты внутри класса, но в другом файле
в мануал дописать про перенаправление после отправки в модуле feedback
страницу, на которую пренаправляется в модуле feedback, вынести в конфиг
проверить работу модуля feedback (была замена ссылки на шаблон письма)
вообще в мануале про фидбэк написать, откуда там имена шаблонов берутся
класс "news_main_link" в новостях - ересь. нуна конфигуратор
дописать в мануал - возможные проблемы с местом на диске, объемом базы и всего такого
в мануал дописать про то, что такое streams в новостях
ADD_ERROR_MESSAGE
сложная задачка: функция getFullFieldDefinition должна автоматически добавлять readonly в определенных ситуациях (например, если поле из присоединенной таблицы-подзапроса)
TAG_TODO обработать все
вынести папку для хранения коммент-аттачей в настройку
дописать в мануал - config.json должен быть в UTF-8
прибраться в comment_list.xsl
feedback - куда перенаправлять после отправки - из конфига
feedback - выводить попап о результатах отправки письма
в функции отправки письма (common/send_email) при прикладывании изображения как-то нужно понимать, относительный или абсолютный путь к картинке и с какого места начинать, если относительный
	ЛИБО: проверить, что все пути всегда начинаются от корня CMS-ки
templateToMessageDialog - проверять наличие шаблона. да и вообще во всех функциях API проверять не только соответствие формальным признакам, но и логике
module.menu.moveElementUp и moveElementDown - понять, нужно ли их объединять в одну

* ВСЕ БРОСИТЬ, И РАЗОБРАТЬСЯ
	* почему mod_rewrite не редиректит на /new_site/text.txt при наличии /text.txt

* ВАЖНО:
	* при редактировании страницы шаблончики типа <macro type="news" /> заменяются на сгенерированный контент. надо, чтобы оставались. - какбы решение с квадратными скобакми
	* невозможность удаления служебных страниц (например, service_feedback_ok)
	* переименование самих меню (menus)

* ПОКА ХЗ
	* в страницах, которые генерируются модулем меню, сделать соответственное редактирование
	* реализовать style у меню (для случая каталога сделано, нужно сделать для обычного - чтобы применялся сразу стиль к элементу, а не файл к списку)
	**************** реализовано. теперь выяснить, почему стиль не прицепляется как CSS к каталогу

* НЕ ОЧЕНЬ
	* автоматическое определение, какой шаблон использовать для элемента меню-списка (см про каталогизатор и template_group)
	* добавить отслеживание служебных алиасов при создании страниц (search, например)
	* во всех запросах переделать имена таблиц на константы (вроде сделано?)
	* реализовать возможность каждой группе в каталоге присваивать свой шаблон - сейчас сквозной для всего каталога
	* редиректор - форму настройки сделать надо к ему
	* логи почтарю приделать
	* тултипы над иконками в админке страниц и меню
	* у режимах управления страницами и меню заголовок "о компании", а должен быть свой
	* различные пользователи + права доступа + смена пароля пользователя
	* разлогинивание пользователя в модуле auth не должно разлогинивать CMS-админа





--------------------------------------------------------------------------------------------------------------------------------------------
	назначение различных тегов data-*
--------------------------------------------------------------------------------------------------------------------------------------------
типовой метод работы с формами:
	1) контент формы:
		оборачиваем в div data-form-container="some-form-name"
		ИЛИ
		оборачиваем в form data-form-name="some-form-name"
		
	2) кнопке сабмита добавляем атрибуты:   data-button-action="form-submit"  data-form-submit="some-form-name"

	3) скрипт обработки AJAX либо onload должен найти все кнопку, на которой есть data-button-action="form-submit",
		на нее повесить сабмит формы, а именно: сначала ищем форму, указанную у кнопки в атрибуте data-form-submit,
		если она есть, сабмитим ее. Если нет, ищем любой вообще контейнер с атрибутом data-form-container, берем его
		значение, оборачиваем контейнер в форму, даем ей data-form-name и сабмитим ее.
	4) мысли:
		* диалоговые формы все делаем в два слоя - внешний становится диалогом, внутренний - оборачивается формой
		* блоки, не относящиеся непосредственно к данным формы (фильтраторы, кнопки, рисунки и тому подобная муть) - во внешнем контейнере
	

data-form-submit
	назначение
		обозначает форму, для которой будет сделан submit. Само наличие атрибута не значит, что будет вызван обработчик - это просто обозначение
	    для функции, развешивающей хендлеры. Сама форма должна быть снабжена атрибутом data-form-name
		
	где встречается
		кнопки для сабмита форм

data-form-name
	назначение
		идентификатор формы
	где встречается
		тег form

data-button-action
	назначение
		показывает функцию кнопки (form-submit, form-cancel, comment-delete)
	где встречается	
		на кнопках

data-form-container
	назначение
		индикатор контейнера, который надо обернуть в форму для сабмита. Нужен для того, чтобы можно было делать несколько вложенных
		в друг друга форм с разными сабмитами
	значение
		будет присвоено атрибуту data-form-name (см описание)
	где встречается
		любой контейнер (div, например)

data-comment-id
	назначение
		идентификатор комментария
	где встрачается
		форма комментариев (и она же, встроенная в форму редактирования)
		
data-meaning
	назначение
		общее назначение элемента
	где встречается
		везде
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	